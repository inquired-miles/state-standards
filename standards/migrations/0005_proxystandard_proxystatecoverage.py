# Generated by Django 5.2.4 on 2025-08-12 00:06

import django.db.models.deletion
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('standards', '0004_standard_hierarchy_standard_is_atomic_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProxyStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proxy_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('cluster_id', models.IntegerField(db_index=True)),
                ('centroid_embedding', pgvector.django.vector.VectorField(dimensions=1536)),
                ('coverage_count', models.IntegerField(default=0)),
                ('avg_similarity', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medoid_atom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='medoid_for_proxy', to='standards.standardatom')),
                ('member_atoms', models.ManyToManyField(related_name='proxy_memberships', to='standards.standardatom')),
            ],
            options={
                'verbose_name': 'Proxy Standard',
                'verbose_name_plural': 'Proxy Standards',
                'ordering': ['-coverage_count', 'proxy_id'],
            },
        ),
        migrations.CreateModel(
            name='ProxyStateCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atom_count', models.IntegerField(default=0)),
                ('avg_similarity', models.FloatField(default=0.0)),
                ('proxy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_coverages', to='standards.proxystandard')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standards.state')),
            ],
            options={
                'verbose_name': 'Proxy State Coverage',
                'verbose_name_plural': 'Proxy State Coverages',
                'indexes': [models.Index(fields=['state'], name='standards_p_state_i_f48066_idx')],
                'unique_together': {('proxy', 'state')},
            },
        ),
    ]
