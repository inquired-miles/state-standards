# Generated by Django 5.2.4 on 2025-08-12 00:22

import django.db.models.deletion
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('standards', '0005_proxystandard_proxystatecoverage'),
    ]

    operations = [
        migrations.CreateModel(
            name='CurriculumDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='curricula/')),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Curriculum Document',
                'verbose_name_plural': 'Curriculum Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CoverageDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField()),
                ('is_covered', models.BooleanField(default=False)),
                ('atom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standards.standardatom')),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atom_coverages', to='standards.curriculumdocument')),
            ],
            options={
                'verbose_name': 'Coverage Detail',
                'verbose_name_plural': 'Coverage Details',
                'indexes': [models.Index(fields=['curriculum', 'is_covered'], name='standards_c_curricu_eda9ea_idx')],
                'unique_together': {('curriculum', 'atom')},
            },
        ),
        migrations.CreateModel(
            name='StandardCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_atoms', models.IntegerField()),
                ('covered_atoms', models.IntegerField()),
                ('coverage_percentage', models.FloatField()),
                ('status', models.CharField(choices=[('FULL', 'Fully Covered (â‰¥90%)'), ('PARTIAL', 'Partially Covered (70-89%)'), ('MINIMAL', 'Minimally Covered (40-69%)'), ('NONE', 'Not Covered (<40%)')], max_length=10)),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standard_coverages', to='standards.curriculumdocument')),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standards.standard')),
            ],
            options={
                'verbose_name': 'Standard Coverage',
                'verbose_name_plural': 'Standard Coverages',
                'unique_together': {('curriculum', 'standard')},
            },
        ),
        migrations.CreateModel(
            name='StateCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_standards', models.IntegerField()),
                ('full_coverage_count', models.IntegerField()),
                ('partial_coverage_count', models.IntegerField()),
                ('minimal_coverage_count', models.IntegerField()),
                ('none_coverage_count', models.IntegerField()),
                ('overall_percentage', models.FloatField()),
                ('is_marketable', models.BooleanField(default=False)),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_coverages', to='standards.curriculumdocument')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standards.state')),
            ],
            options={
                'verbose_name': 'State Coverage',
                'verbose_name_plural': 'State Coverages',
                'ordering': ['-overall_percentage'],
                'unique_together': {('curriculum', 'state')},
            },
        ),
    ]
