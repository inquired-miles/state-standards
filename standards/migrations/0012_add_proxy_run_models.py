# Generated by Django 5.2.4 on 2025-08-15 23:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('standards', '0011_add_topic_based_proxy'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProxyRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.CharField(db_index=True, help_text='Unique identifier for this run', max_length=50, unique=True)),
                ('name', models.CharField(help_text='User-friendly name for this run', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Optional description of run parameters and goals')),
                ('run_type', models.CharField(choices=[('atoms', 'StandardAtom Clustering'), ('standards', 'Standard Clustering'), ('topics', 'Topic Categorization')], help_text='Type of proxy generation method used', max_length=20)),
                ('filter_parameters', models.JSONField(default=dict, help_text='Grade levels, subject areas, and other filters used')),
                ('algorithm_parameters', models.JSONField(default=dict, help_text='Min cluster size, epsilon, chunk size, etc.')),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='running', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, help_text='Total run time in seconds', null=True)),
                ('total_input_standards', models.IntegerField(default=0, help_text='Number of standards processed')),
                ('total_proxies_created', models.IntegerField(default=0, help_text='Number of proxy standards created')),
                ('outlier_proxies_count', models.IntegerField(default=0, help_text='Number of outlier/uncategorized proxies')),
                ('coverage_percentage', models.FloatField(blank=True, help_text='Overall coverage percentage', null=True)),
                ('created_by', models.CharField(blank=True, help_text='User who initiated this run', max_length=100)),
                ('job_id', models.CharField(blank=True, help_text='Background job ID for tracking', max_length=100)),
            ],
            options={
                'verbose_name': 'Proxy Run',
                'verbose_name_plural': 'Proxy Runs',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['run_type', 'status'], name='standards_p_run_typ_a69e13_idx'), models.Index(fields=['started_at'], name='standards_p_started_3f3eda_idx'), models.Index(fields=['coverage_percentage'], name='standards_p_coverag_f90ba4_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProxyRunReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_coverage', models.JSONField(default=dict, help_text='Coverage statistics per state')),
                ('topic_prevalence', models.JSONField(default=dict, help_text='Topic prevalence across states')),
                ('coverage_distribution', models.JSONField(default=dict, help_text='Bell curve data for coverage distribution')),
                ('outlier_analysis', models.JSONField(default=dict, help_text='Analysis of outlier patterns')),
                ('topic_hierarchy_stats', models.JSONField(default=dict, help_text='Statistics about topic hierarchy usage')),
                ('cross_state_commonality', models.JSONField(default=dict, help_text='Topics that appear across multiple states')),
                ('silhouette_scores', models.JSONField(default=dict, help_text='Clustering quality metrics')),
                ('coverage_gaps', models.JSONField(default=dict, help_text='Areas with low coverage')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generation_time_seconds', models.FloatField(blank=True, null=True)),
                ('run', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='standards.proxyrun')),
            ],
            options={
                'verbose_name': 'Proxy Run Report',
                'verbose_name_plural': 'Proxy Run Reports',
            },
        ),
    ]
