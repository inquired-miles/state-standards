# Generated by Django 5.2.4 on 2025-08-18 22:40

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('standards', '0012_add_proxy_run_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='BulkUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(max_length=500, upload_to='bulk_uploads/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('file_type', models.CharField(choices=[('csv', 'CSV File'), ('json', 'JSON File'), ('xlsx', 'Excel File')], max_length=10)),
                ('clear_existing', models.BooleanField(default=False, help_text='Clear existing standards before import')),
                ('generate_embeddings', models.BooleanField(default=False, help_text='Generate embeddings after import')),
                ('batch_size', models.IntegerField(default=100, help_text='Number of records to process per batch')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('uploading', 'Uploading'), ('preview', 'Preview'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('generating_embeddings', 'Generating Embeddings'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=25)),
                ('total_records', models.IntegerField(default=0)),
                ('processed_records', models.IntegerField(default=0)),
                ('successful_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('preview_data', models.JSONField(blank=True, default=list, help_text='Sample records for preview')),
                ('column_mapping', models.JSONField(blank=True, default=dict, help_text='Column mapping configuration')),
                ('error_log', models.JSONField(blank=True, default=list, help_text='List of errors encountered during processing')),
                ('processing_summary', models.JSONField(blank=True, default=dict, help_text='Summary of processing results')),
                ('task_id', models.CharField(blank=True, help_text='Celery task ID for async processing', max_length=255)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.CharField(help_text='Username of the user who uploaded the file', max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bulk Upload',
                'verbose_name_plural': 'Bulk Uploads',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='standards_b_status_e9c5e6_idx'), models.Index(fields=['uploaded_by', 'created_at'], name='standards_b_uploade_900668_idx'), models.Index(fields=['task_id'], name='standards_b_task_id_8064a6_idx')],
            },
        ),
    ]
