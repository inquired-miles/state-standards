# Generated by Django 5.2.4 on 2025-09-15 21:03

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('standards', '0015_increase_topic_field_limits'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClusterReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_shared', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ClusterReportEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selection_order', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['selection_order'],
            },
        ),
        migrations.AlterModelOptions(
            name='clustermembership',
            options={'ordering': ['selection_order', '-membership_strength']},
        ),
        migrations.AddField(
            model_name='clustermembership',
            name='added_by',
            field=models.ForeignKey(blank=True, help_text="Staff user who added the standard when origin='custom'", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custom_cluster_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clustermembership',
            name='selection_order',
            field=models.PositiveIntegerField(default=0, help_text='Preserve manual ordering of standards inside a custom cluster'),
        ),
        migrations.AddField(
            model_name='clustermembership',
            name='similarity_score',
            field=models.FloatField(blank=True, help_text='Semantic similarity score captured during selection', null=True),
        ),
        migrations.AddField(
            model_name='topiccluster',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text="Staff user who created the cluster when origin='custom'", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custom_topic_clusters', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='topiccluster',
            name='is_shared',
            field=models.BooleanField(default=False, help_text='Share custom cluster with other staff users'),
        ),
        migrations.AddField(
            model_name='topiccluster',
            name='origin',
            field=models.CharField(choices=[('auto', 'Discovered'), ('custom', 'User Cluster')], default='auto', help_text='Whether the cluster was system-discovered or user-created', max_length=10),
        ),
        migrations.AddField(
            model_name='topiccluster',
            name='search_context',
            field=models.JSONField(blank=True, default=dict, help_text='Serialized query/filters used when creating a custom cluster'),
        ),
        migrations.AddIndex(
            model_name='topiccluster',
            index=models.Index(fields=['origin', 'created_by'], name='standards_t_origin_01b028_idx'),
        ),
        migrations.AddConstraint(
            model_name='topiccluster',
            constraint=models.UniqueConstraint(condition=models.Q(('origin', 'custom')), fields=('created_by', 'name'), name='unique_custom_cluster_per_owner_name'),
        ),
        migrations.AddField(
            model_name='clusterreport',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cluster_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clusterreportentry',
            name='cluster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standards.topiccluster'),
        ),
        migrations.AddField(
            model_name='clusterreportentry',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standards.clusterreport'),
        ),
        migrations.AddField(
            model_name='clusterreport',
            name='clusters',
            field=models.ManyToManyField(related_name='cluster_reports', through='standards.ClusterReportEntry', to='standards.topiccluster'),
        ),
        migrations.AlterUniqueTogether(
            name='clusterreportentry',
            unique_together={('report', 'cluster')},
        ),
        migrations.AddIndex(
            model_name='clusterreport',
            index=models.Index(fields=['created_by', 'is_shared'], name='standards_c_created_8c754b_idx'),
        ),
        migrations.AddConstraint(
            model_name='clusterreport',
            constraint=models.UniqueConstraint(fields=('created_by', 'title'), name='unique_cluster_report_per_owner_title'),
        ),
    ]
